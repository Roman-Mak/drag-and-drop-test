{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["rows","columns","getRandomLocation","prevLocation","chestZone","location","Math","floor","random","length","includes","i","App","useState","objsLocations","setObjsLocations","xIndex","yIndex","arr","sort","slice","a","b","Number","getChestZone","appleAnim","setAppleAnim","boxAnim","setBoxAnim","useEffect","prev","defaultAppleOptions","loop","autoplay","animationData","apple","rendererSettings","preserveAspectRatio","defaultBoxOptions","box","className","onDragEnd","result","destination","droppableId","filter","el","source","map","index","onDragUpdate","r","style","display","c","objLocation","find","l","isDropDisabled","provided","droppableProps","ref","innerRef","outline","width","height","position","left","top","options","isStopped","disableInteractiveElementBlocking","draggableId","indexOf","draggableProps","dragHandleProps","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f77daae9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Lottie from 'react-lottie';\nimport './App.css';\nimport apple from './lottie-animations/apple.json';\nimport box from './lottie-animations/surprise-box.json';\n\nconst rows = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\nconst columns = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'];\n\nconst getRandomLocation = (rows: string[], columns: string[], prevLocation: string[], chestZone: string[]): string => {\n  const location = `${columns[Math.floor(Math.random() * columns.length)]}${rows[Math.floor(Math.random() * rows.length)]}`;\n\n  if (chestZone.includes(location)) {\n    return getRandomLocation(rows, columns, prevLocation, chestZone);\n  }\n\n  for (let i = 0; i < prevLocation.length; i++) {\n    if (location === prevLocation[i]) {\n      return getRandomLocation(rows, columns, prevLocation, chestZone);\n    }\n  }\n  return location;\n}\n\nconst getChestZone = (rows: string[], columns: string[]) => {\n  const xIndex = Math.floor(Math.random() * rows.length);\n  const yIndex = Math.floor(Math.random() * columns.length);\n\n  const arr = [\n    `${columns[yIndex]}${rows[xIndex]}`,\n    `${columns[yIndex]}${rows[xIndex] === '1' ? rows[xIndex + 1] : rows[xIndex - 1]}`,\n    `${columns[yIndex] === 'a' ? columns[yIndex + 1] : columns[yIndex - 1]}${rows[xIndex]}`,\n    `${columns[yIndex] === 'a' ? columns[yIndex + 1] : columns[yIndex - 1]}${rows[xIndex] === '1' ? rows[xIndex + 1] : rows[xIndex - 1]}`,\n  ].sort();\n\n  return [...arr.slice(0, 2).sort((a, b) => Number(a.slice(1)) - Number(b.slice(1))), ...arr.slice(2).sort((a, b) => Number(a.slice(1)) - Number(b.slice(1)))]\n}\n\nconst objQuantity = 4;\n\nfunction App() {\n  const [objsLocations, setObjsLocations] = useState<string[]>([]);\n  const [chestZone] = useState<string[]>(getChestZone(rows, columns));\n  const [appleAnim, setAppleAnim] = useState(true);\n  const [boxAnim, setBoxAnim] = useState(false);\n\n  function handleOnDragEnd(result: any) {\n    setAppleAnim(true);\n    setBoxAnim(false);\n    if (!result.destination) return;\n\n    if (chestZone.includes(result.destination.droppableId)) {\n      return setObjsLocations(objsLocations.filter(el => el !== result.source.droppableId));\n    }\n\n    setObjsLocations(prev => {\n      return prev.map((el, i) => {\n        if (i === result.source.index && !prev.includes(result.destination.droppableId)) {\n          el = result.destination.droppableId\n        }\n        return el\n      })\n    })\n  }\n\n  function handleOnDragUpdate(result: any) {\n    setAppleAnim(false);\n    if (!result.destination) return;\n    // console.log(result)\n    if (chestZone.includes(result.destination.droppableId)) {\n      setBoxAnim(true);\n    } else {\n      setBoxAnim(false);\n    }\n  }\n\n  useEffect(() => {\n    for (let i = 1; i <= objQuantity; i++) {\n      setObjsLocations(prev => [...prev, getRandomLocation(rows, columns, prev, chestZone)]);\n    }\n  }, [chestZone])\n\n  const defaultAppleOptions = {\n    loop: true,\n    autoplay: true, \n    animationData: apple,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\n  const defaultBoxOptions = {\n    loop: true,\n    autoplay: false, \n    animationData: box,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>{objsLocations.length ? 'Collect all apples in the box' : 'Great job!'}</h1>\n        <DragDropContext onDragEnd={handleOnDragEnd} onDragUpdate={handleOnDragUpdate}>\n          {rows.map((r) => {\n            return <div key={r} style={{display: 'flex'}}>\n            {columns.map(c => {\n              const objLocation = objsLocations.find(l => l ===`${c}${r}`);\n              return <Droppable key={`${c}${r}`} droppableId={`${c}${r}`} isDropDisabled={!!objLocation}>\n              {(provided) => (\n                <div {...provided.droppableProps} ref={provided.innerRef} style={{outline: chestZone.includes(`${c}${r}`) ? 'none' : '1px solid', width: '30px', height: '30px', position: 'relative'}}>\n                  {`${c}${r}` === chestZone[0] && <div style={{position: 'absolute', left: -60, top: -60}}>\n                    <Lottie width={180} height={180} options={defaultBoxOptions} isStopped={!boxAnim}/> \n                  </div>}\n                  {objLocation && <Draggable disableInteractiveElementBlocking draggableId={`${objsLocations.indexOf(objLocation)}`} index={objsLocations.indexOf(objLocation)}>\n                      {(provided) => (\n                        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                          <Lottie width={30} height={30} options={defaultAppleOptions} isStopped={!appleAnim}/>\n                        </div>\n                      )}\n                    </Draggable>}\n                    {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          })}\n          </div>\n        })}\n          {/* <Droppable droppableId=\"characters\">\n            {(provided) => (\n              <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n                {characters.map(({id, name }, index) => {\n                  return (\n                    <Draggable key={id} draggableId={id} index={index}>\n                      {(provided) => (\n                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                          <p>\n                            { name }\n                          </p>\n                        </li>\n                      )}\n                    </Draggable>\n                  );\n                })}\n              </ul>\n            )}\n          </Droppable> */}\n        </DragDropContext>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}